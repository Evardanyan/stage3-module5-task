plugins {
    id 'java-base'
    id "org.sonarqube" version "3.3"
    id 'jacoco'
}

wrapper {
    gradleVersion = gradlewVersion
}

//apply plugin: 'jacoco'
//
//jacoco {
//    toolVersion = '0.8.5'
//}

//test {
//    finalizedBy jacocoTestReport
//}


//jacocoTestReport {
//    reports {
//        xml.enabled = true
//        html.enabled = true
//    }
//}

//sonarqube {
//    properties {
//        property "sonar.host.url", "http://localhost:9000"  // replace with your SonarQube server URL
//        property "sonar.login", "5392c1af553cd404198e5c3dbad675aba20ef272"  // replace with your SonarQube user token
//        // If you want to add more properties
//        property "sonar.sources", "src/main"
//        property "sonar.tests", "src/test"
//        property "sonar.java.coveragePlugin", "jacoco"
//        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
//
//    }
//}



subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation "org.springframework:spring-context:$springVersion"


//--------------------------Rest assurance----------------------------------------------------------

        // https://mvnrepository.com/artifact/org.hamcrest/hamcrest
        testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'

// https://mvnrepository.com/artifact/com.google.code.gson/gson
        testImplementation group: 'com.google.code.gson', name: 'gson', version: '2.6.2'
// https://mvnrepository.com/artifact/com.jayway.restassured/rest-assured
//        testImplementation group: 'com.jayway.restassured', name: 'rest-assured', version: '2.9.0'

        implementation group: 'io.rest-assured', name: 'rest-assured', version: '5.3.0'
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
        implementation group: 'org.slf4j', name: 'slf4j-simple', version: '2.0.5'

        testImplementation "org.mockito:mockito-core:3.+"



//-------------------------------Swagger------------------------------------------------------------------
        implementation 'io.springfox:springfox-boot-starter:3.0.0'

//--------------------------------------------------------------------------------------------------------


        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
        testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.24.2'
//        implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.7.7"
        implementation group: 'org.postgresql', name: 'postgresql', version: '42.5.3'
        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.4.0-b180830.0359'
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '2.7.7'
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-parent
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.7.7', ext: 'pom'
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.7.7'
        // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-hateoas
        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: '2.7.7'
        // https://mvnrepository.com/artifact/org.projectlombok/lombok
        compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.26'


        implementation 'org.springframework:spring-aspects:5.3.13'

        implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
        implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'

        implementation group: 'org.springframework.boot', name: 'spring-boot-starter-hateoas', version: '2.7.7'

    }


    jacoco {
        toolVersion = '0.8.8'
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
        }
    }

    test {
        useJUnitPlatform()
        exclude '**/com/mjc/school/controller/**'
        finalizedBy jacocoTestReport
    }


    sonarqube {
        properties {
            property "sonar.host.url", "http://localhost:9000"
            property "sonar.login", "a719092aea7b3d5eb0a15490a7a3e3ee95f1b0c1"
            property "sonar.projectKey", "stage3-module5-task"

            property "sonar.sources", "${project.projectDir}/src/main"
            property "sonar.tests", "${project.projectDir}/src/test"
            property "sonar.java.coveragePlugin", "jacoco"
            property "sonar.coverage.jacoco.xmlReportPaths", "${project.buildDir}/reports/jacoco/test/jacocoTestReport.xml"

        }
    }
}


task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}